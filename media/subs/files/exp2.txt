#include<stdio.h>
#include<unistd.h>
#include<sys/types.h>
#include<fcntl.h>
#include<stdlib.h>
#include<time.h>

int main()
{
  int retval = fork();
  clock_t start, end;
  if (retval == 0)
  {
    printf("\nThis is the child process\n");
    printf("\nChild process id: %d\n", getpid());
    printf("\nParent Process id: %d\n", getppid());
    char *c = (char*)calloc(100, sizeof(char));
    start = clock();
    int file = open("file1.txt", O_RDONLY);
    int content = read(file, c, 50);
    printf("\nContent: \n%s\n", c);
    close(file);
    end = clock();
    printf("\nTime taken: %f\n", (double)(end-start)/CLOCKS_PER_SEC);
  }
  else if(retval > 0)
  {
    printf("\nCurrently in Parent Process\n");
    printf("\nParent Process id: %d\n", getpid());
    printf("\nParents' Parent Process id: %d\n", getppid());
  }
  else
  {
    printf("\nNo child process is created!\n");
  }
  return 0;
}